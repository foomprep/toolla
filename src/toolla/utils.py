from typing import get_type_hints, Callable, Dict, Any

# Generated by Claude Sonnet 3.5
def string_to_dict(input_string):
    lines = input_string.strip().split('\n')
    result = {}
    for line in lines:
        if ':' in line:
            key, value = line.split(':', 1)
            key = key.strip()
            value = value.strip()
            result[key] = value
    
    return result

def build_tool_schema(f: Callable):
    """Build a JSON schema for a tool function."""
    hints = get_type_hints(f)
    schema = {
        "type": "object",
        "properties": {},
        "required": []
    }

    for param, hint in hints.items():
        print(param, hint)
        if hint is int:
            print(f"Parameter {param} is hinted as int")
            # schema["properties"][param.name] = {
            #     "type": "number",
            #     "description": "A float or integer."
            # }
            # schema["required"].append(param.name)
    return schema
